#
# Nordic nRF52 series: ARM Cortex-M4 @ 64 MHz
#

source [find target/swj-dp.tcl]

if { [info exists CHIPNAME] } {
	set _CHIPNAME $CHIPNAME
} else {
	set _CHIPNAME nrf52
}

# Work-area is a space in RAM used for flash programming
# By default use 16kB
if { [info exists WORKAREASIZE] } {
   set _WORKAREASIZE $WORKAREASIZE
} else {
   set _WORKAREASIZE 0x4000
}

if { [info exists CPUTAPID] } {
	set _CPUTAPID $CPUTAPID
} else {
	set _CPUTAPID 0x2ba01477
}

swj_newdap $_CHIPNAME cpu -expected-id $_CPUTAPID
dap create $_CHIPNAME.dap -chain-position $_CHIPNAME.cpu

set _TARGETNAME $_CHIPNAME.cpu
target create $_TARGETNAME cortex_m -dap $_CHIPNAME.dap

adapter_khz 1000

$_TARGETNAME configure -work-area-phys 0x20000000 -work-area-size $_WORKAREASIZE -work-area-backup 0

if { ![using_hla] } {
	cortex_m reset_config sysresetreq
}

flash bank $_CHIPNAME.flash nrf5 0x00000000 0 1 1 $_TARGETNAME
flash bank $_CHIPNAME.uicr nrf5 0x10001000 0 1 1 $_TARGETNAME

# Return whether debug access is locked (see manual ยง16.2)
proc nrf52_is_ap_protected {} {
	if { [using_hla] } {
		return -code error "command not working with hla interfaces"
	}

	set val [[[target current] cget -dap] apreg 1 0x0c]
	return [expr {$val == 0 ? true : false}]
}
add_help_text nrf52_is_ap_protected "return whether nRF52 debug access is locked"

# Erase all content and unlock debug access (see manual ยง16.2)
proc nrf52_erase_unlock {} {
	if { [using_hla] } {
		return -code error "command not working with hla interfaces"
	}

	poll off
	set target [target current]
	set dap [$target cget -dap]

	# Erase all content
	$dap apreg 1 0x04 1
	# Wait for completion
	while {[$dap apreg 1 0x08] == 1} {
		echo "erase in progress..."
		sleep 150
	}
	echo "erased and unlocked"

	reset halt
	poll on
}
add_help_text nrf52_erase_unlock "erase all nRF52 content and unlock debug access"

# Enable debug access protection (see manual ยง14.1.62)
proc nrf52_protect_ap {} {
	poll off

	flash fillw 0x10001208 0x00 1

	reset run
	poll on
}
add_help_text nrf52_protect_ap "enable nRF52 debug access protection"
