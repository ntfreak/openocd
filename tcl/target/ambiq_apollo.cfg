#
# Ambiq Micro - Apollo Family
#

if { [info exists CHIPNAME] } {
   set  _CHIPNAME $CHIPNAME
} else {
   set  _CHIPNAME apollo
}

# Work-area is a space in RAM used for flash programming
# By default use 0kB.
if { [info exists WORKAREASIZE] } {
   set  _WORKAREASIZE $WORKAREASIZE
} else {
   set  _WORKAREASIZE 0x200
}

if { [info exists FLASHSIZE] } {
    set _FLASHSIZE $FLASHSIZE
} else {
    set _FLASHSIZE 0x00040000
}

if { [info exists RESETCONFIG] } {
    set _RESETCONFIG $RESETCONFIG
} else {
    set _RESETCONFIG vectreset
}

# CPU TAP ID 0x2BA01477 for Cortex-M4F
if { [info exists CPUTAPID ] } {
   set _CPUTAPID $CPUTAPID
} else {
   set _CPUTAPID 0x2BA01477
}

# Apollo EVK's support SWD transport only.
transport select swd

source [find target/swj-dp.tcl]

swj_newdap $_CHIPNAME cpu -irlen 4 -expected-id $_CPUTAPID

set _TARGETNAME $_CHIPNAME.cpu
target create $_TARGETNAME cortex_m -endian little -chain-position $_TARGETNAME

$_TARGETNAME configure -event gdb-attach { reset halt }

$_TARGETNAME configure -work-area-phys 0x10000000 -work-area-size $_WORKAREASIZE -work-area-backup 0

# Always 2 flash banks. Flash size will be probed but is supplied here as well.
set _FLASHNAME $_CHIPNAME.flash0
flash bank $_FLASHNAME ambiqmicro 0x00000000 $_FLASHSIZE 0 0 $_TARGETNAME
# The second bank follows the first.
set _FLASHNAME $_CHIPNAME.flash1
flash bank $_FLASHNAME ambiqmicro $_FLASHSIZE $_FLASHSIZE 0 0 $_TARGETNAME

# If srst is not fitted use VECTRESET, or other method supplied by board to
# perform a soft reset.
cortex_m reset_config $_RESETCONFIG
reset_config srst_only srst_open_drain

