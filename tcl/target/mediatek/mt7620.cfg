#
# The MediaTek MT7620 is a highly integrated 2T2R 802.11n wireless network
# router SoC.
#
# Product page:
# https://www.mediatek.com/products/homeNetworking/mt7620n-a
#
# Specifications:
# - MIPS24KEc @ 580 MHz
# - 64KB I-Cache and 32KB D-Cache
#

source [find target/mediatek/mmio.tcl]
source [find target/mediatek/memc.tcl]

if { [info exists CHIPNAME] } {
    set _CHIPNAME $CHIPNAME
} else {
    set _CHIPNAME mt7620
}

jtag newtap ${_CHIPNAME} cpu -irlen 5 -ircapture 0x1 -irmask 0x1f -expected-id 0x1635224f

set _TARGETNAME $_CHIPNAME.cpu

target create ${_TARGETNAME}0 mips_m4k -endian little -chain-position ${_CHIPNAME}.cpu

proc cpu_pll_init {} {
    # Set init CPU clock to 480MHz
    mmio_clrsetbits_32 0xb0000058 0x02000000 0x01000000

    # Enable software control of CPU PLL
    mmio_setbits_32    0xb0000054 0x80000000

    # CPU PLL power down
    mmio_setbits_32    0xb0000058 0x04000000

    # PLL configuration PLL_MULT_RATIO = 5, PLL_DIV_RATIO = 0 (+1) SSC_SWING = 7
    mmio_clrsetbits_32 0xb0000054 0x04070ff0 0x00050070

    # CPU PLL power up
    mmio_clrbits_32    0xb0000058 0x04000000

    # Wait for CPU PLL locked
    set pll_locked 0
    while {$pll_locked == 0} {
        set pll_locked [expr [mmio_readfield_32 0xb0000058 23 1]]
    }

    # Set final CPU clock source
    mmio_clrbits_32 0xb0000058 0x03000000

    # Adjust CPU clock
    mmio_clrsetbits_32 0xb000003c 0x00001f1f 0x00000101
}

proc dram_init {size} {
    set ddr1_cfgs_8mb   { 0x34A1EB94 0x20262324 0x28000033 0x00000002 0x00000000 }
    set ddr1_cfgs_16mb  { 0x34A1EB94 0x202A2324 0x28000033 0x00000002 0x00000000 }
    set ddr1_cfgs_32mb  { 0x34A1E5CA 0x202E2324 0x28000033 0x00000002 0x00000000 }
    set ddr1_cfgs_64mb  { 0x3421E5CA 0x20322324 0x28000033 0x00000002 0x00000000 }
    set ddr1_cfgs_128mb { 0x241B05CA 0x20362334 0x28000033 0x00000002 0x00000000 }

    set ddr2_cfgs_32mb  { 0x2519E2E5 0x222E2323 0x68000C43 0x00000416 0x0000000A }
    set ddr2_cfgs_64mb  { 0x249AA2E5 0x22322323 0x68000C43 0x00000416 0x0000000A }
    set ddr2_cfgs_128mb { 0x249B42E5 0x22362323 0x68000C43 0x00000416 0x0000000A }
    set ddr2_cfgs_256mb { 0x249CE2E5 0x223A2323 0x68000C43 0x00000416 0x0000000A }

    set sdr_cfgs { 0x51B283B3 0xC00003A9 }

    set ddr_type [expr [mmio_readfield_32 0xb0000010 4 3]]

    mmio_setbits_32 0xb0000034 0x400
    sleep 200
    mmio_clrbits_32 0xb0000034 0x400

    if { $ddr_type == 1 } {
        if { $size == 8 } {
            ddr_init $ddr1_cfgs_8mb 0x88888888 0x88888888
        } elseif { $size == 16 } {
            ddr_init $ddr1_cfgs_16mb 0x88888888 0x88888888
        } elseif { $size == 32 } {
            ddr_init $ddr1_cfgs_32mb 0x88888888 0x88888888
        } elseif { $size == 64 } {
            ddr_init $ddr1_cfgs_64mb 0x88888888 0x88888888
        } elseif { $size == 128 } {
            ddr_init $ddr1_cfgs_128mb 0x88888888 0x88888888
        }
    } elseif { $ddr_type == 2 } {
        if { $size == 32 } {
            ddr_init $ddr2_cfgs_32mb 0x88888888 0x88888888
        } elseif { $size == 64 } {
            ddr_init $ddr2_cfgs_64mb 0x88888888 0x88888888
        } elseif { $size == 128 } {
            ddr_init $ddr2_cfgs_128mb 0x88888888 0x88888888
        } elseif { $size == 256 } {
            ddr_init $ddr2_cfgs_256mb 0x88888888 0x88888888
        }
    } else {
        if { $size == 8 } {
            sdr_init $sdr_cfgs 1 0
        } elseif { $size == 16 } {
            sdr_init $sdr_cfgs 1 1
        } elseif { $size == 32 } {
            sdr_init $sdr_cfgs 2 1
        } elseif { $size == 64 } {
            sdr_init $sdr_cfgs 2 2
        }
    }
}
