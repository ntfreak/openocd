# Marvell Armada 3700 target

if { [info exists CORES] } {
   set _cores $CORES
} else {
   # save bet, at least one core
   set _cores 1
}

set _CHIPNAME [format a37%s0 $_cores]

#
# Main DAP
#
if { [info exists DAP_TAPID] } {
   set _DAP_TAPID $DAP_TAPID
} else {
   set _DAP_TAPID 0x4ba00477
}

# declare the one JTAG tap to access the DAP
jtag newtap $_CHIPNAME dap -irlen 4 -ircapture 0x1 -irmask 0xf -expected-id $_DAP_TAPID -ignore-version -enable

# declare the 8 main application cores
set _TARGETNAME $_CHIPNAME.cpu
set _smp_command ""

if { [info exists CTIS] } {
    set _ctis $CTIS
} else {
    set _ctis {0x80820000}
}

for { set _core 0 } { $_core < $_cores } { incr _core 1 } {

    set _command "target create ${_TARGETNAME}$_core aarch64 \
                         -chain-position $_CHIPNAME.dap -coreid $_core \
                         -ctibase [lindex $_ctis $_core]"

    if { $_core != 0 } {
        # non-boot core examination may fail
        set _command "$_command -defer-examine"
        set _smp_command "$_smp_command ${_TARGETNAME}$_core"
    } else {
        # uncomment when "hawt" rtos is merged
        # set _command "$_command -rtos hawt"
        set _smp_command "target smp ${_TARGETNAME}$_core"
    }

    eval $_command
}

eval $_smp_command

# declare the auxiliary Cortex-M3 core on AP #2 (runs mcuimage.bin)
target create ${_TARGETNAME}.m3 cortex_m -chain-position $_CHIPNAME.dap -ap-num 3 -defer-examine

targets ${_TARGETNAME}0
${_TARGETNAME}0 configure -event gdb-attach { halt }

