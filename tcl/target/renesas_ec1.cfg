#
# Renesas EC-1 w/ ARM Cortex-R4F @ 150 MHz
#

if { [info exists CHIPNAME] } {
	set _CHIPNAME $CHIPNAME
} else {
	set _CHIPNAME r9a06g043
}

if { [info exists ENDIAN] } {
   set _ENDIAN $ENDIAN
} else {
   set _ENDIAN little
}

if { [info exists CPU_JTAG_TAPID] } {
	set _CPU_JTAG_TAPID $CPU_JTAG_TAPID
} else {
	set _CPU_JTAG_TAPID 0x4ba00477
}


source [find target/swj-dp.tcl]

if { [using_jtag] } {
	set _CPU_TAPID $_CPU_JTAG_TAPID
} else {
	set _CPU_TAPID $_CPU_SWD_TAPID
}

swj_newdap $_CHIPNAME tap -irlen 4 -expected-id $_CPU_TAPID
dap create $_CHIPNAME.dap -chain-position $_CHIPNAME.tap

set _TARGETNAME $_CHIPNAME.cpu
target create $_TARGETNAME cortex_r4 -dap $_CHIPNAME.dap -endian $_ENDIAN

# 512 KiB ATCM @0x0
#   32 KiB BTCM @0x800000
if { [info exists WORKAREASIZE] } {
	set _WORKAREASIZE $WORKAREASIZE
} else {
	set _WORKAREASIZE 0x8000
}

if { [info exists WORKAREAPHYS] } {
	set _WORKAREAPHYS $WORKAREAPHYS
} else {
	set _WORKAREAPHYS 0x800000
}

$_TARGETNAME configure \
-work-area-phys $_WORKAREAPHYS \
-work-area-size $_WORKAREASIZE \
-work-area-backup 0 \
-event gdb-attach {
	cortex_r4 dbginit
	halt
}

$_TARGETNAME configure -event reset-init {
	ec1_init
	cortex_r4 dbginit
}

set _FLASHNAME $_CHIPNAME.flash
flash bank $_FLASHNAME spibsc 0x30000000 0x400000 0 0 $_TARGETNAME 0xA0005000

source [find mem_helper.tcl]

proc ec1_init {} {
	halt

	;# disable caches, MPU & branch predictor
	set tR [arm mrc 15 0 1 0 0]
	arm mcr 15 0 1 0 0 [expr $tR & 0xFFFFE7FA]

	;# invalidate caches
	arm mcr 15 0 7 5 0 0
	arm mcr 15 0 15 5 0 0

	;# Configure TCM
	;# Enable ECC
	set tR [arm mrc 15 0 1 0 1]
	arm mcr 15 0 1 0 1 [expr $tR | 0x06000000]

	;# Configure clocks
	;# unlock
	mww 0xA00B0B00 0x0000A501
	mdw 0xA00B0B00 0x1

	;# Enables LOCO clock
	mww 0xA00B0040 0x0

	;# Enables PLL1 operation
	mww 0xA00B0038 0x1

	sleep 1
	;# Selects the PLL1
	mww 0xA00B0024 0x1

	;# lock
	mww 0xA00B0B00 0x0000A500
	mdw 0xA00B0B00 0x1

	;# unlock
	mww 0xA00B0B00 0x0000A508
	mdw 0xA00B0B00 0x1

	;# access 0-wait
	mww 0xA00B0800 0x2

	;# lock
	mww 0xA00B0B00 0x0000A500
	mdw 0xA00B0B00 0x1

}

reset_config trst_and_srst
