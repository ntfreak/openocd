# NXP LPC8Nxx Cortex-M0+ with 8kB SRAM
# SWD only transport
# Based on NXP proposal https://community.nxp.com/message/1011149

source [find target/swj-dp.tcl]
source [find mem_helper.tcl]

if { [info exists CHIPNAME] } {
	set  _CHIPNAME $CHIPNAME
} else {
	set  _CHIPNAME lpc8nxx
}

swj_newdap $_CHIPNAME cpu -irlen 4 -expected-id 0
dap create $_CHIPNAME.dap -chain-position $_TARGETNAME

set _TARGETNAME $_CHIPNAME.cpu
target create $_TARGETNAME cortex_m -endian little -dap $_CHIPNAME.dap

$_TARGETNAME configure -work-area-phys 0x10000000 -work-area-size 0x1ff0 -work-area-backup 0

flash bank $_CHIPNAME.flash lpc2000 0x0 0x7800 0 0 $_TARGETNAME lpc800 500

adapter_khz 100

# The device extensively uses deep sleep modes and power off the SWD interface.
# Reset is often the only way to connect. Always wire adapter SRST to the RESETN pin!
reset_config srst_only

# If OpenOCD cannot connect the target, add following line as the last configuration command
# in your user config:
#catch init
# and issue 'reset halt' or 'reset init'
# Note: 'reset_config connect_assert_srst' cannot be used as SRST signal gates debugging.

# Using soft-reset 'reset_config none' is strongly discouraged.
# RESETN sets the system clock to 500 kHz. Unlike soft-reset does not.
# If you have to use soft-reset, set the system clock to 500 kHz before reset to simulate
# the functionality of hw reset.
# Add following line to your user config:
#$_TARGETNAME configure -event reset-start "$_TARGETNAME arp_halt; set_sysclk_500khz"

proc set_sysclk_500khz {} {
	set SYSCLKCTRL 0x40048020
	set SYSCLKUEN 0x40048024
	mww $SYSCLKUEN 0
	mmw $SYSCLKCTRL 0x8 0xe
	mww $SYSCLKUEN 1
}

if {![using_hla]} {
    # if srst is not fitted use SYSRESETREQ to
    # perform a soft reset
    cortex_m reset_config sysresetreq
}
