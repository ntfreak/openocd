reset_config trst_and_srst
#adapter_nsrst_assert_width 100
adapter_nsrst_delay 100
#jtag_ntrst_assert_width 100
jtag_ntrst_delay 100

set CHIPNAME danube
jtag newtap $CHIPNAME cpu0 -irlen 5  -ircapture 0x1 -irmask 0x1f -expected-id 0x183
jtag newtap $CHIPNAME cpu1 -irlen 5  -ircapture 0x1 -irmask 0x1f -expected-id 0x183

set TARGETNAME $CHIPNAME.cpu1
target create $TARGETNAME mips_m4k -endian big -chain-position $TARGETNAME

set FLASHNAME $CHIPNAME.nor0
flash bank $FLASHNAME cfi 0xb0000000 0x4000000 2 2 $TARGETNAME

$TARGETNAME configure -work-area-phys 0x1e1a0000 -work-area-size 0x10000 -work-area-backup 0

proc danube_cgu_init {} {
    echo "Danube: CGU init"

    # CGU for CPU 333Mhz, DDR 167Mhz, FPI 83Mhz
    mww 0xbf103010 0x0e8
    mww 0xbf103014 0x01
    mww 0xbf103020 0x780000
}

proc danube_pmu_init {} {
    echo "Danube: PMU init"

    # Power-on all subsystems
    mww 0xbf10201c 0x2F3FFE3
}

proc danube_mc_init_prepare {} {
    echo "Danube: MC init prepare"

    # General MC register
    mww 0xbf800060 0x7
    mww 0xbf800010 0x0
    mww 0xbf800020 0x0
    mww 0xbf800200 0x02
    mww 0xbf800210 0x0

    # DDR Register
    mww 0xbf801000 0x1b1b
    mww 0xbf801010 0x0
    mww 0xbf801020 0x0
    mww 0xbf801030 0x0
    mww 0xbf801040 0x0
    mww 0xbf801050 0x200
    mww 0xbf801060 0x0605
    mww 0xbf801070 0x303
    mww 0xbf801080 0x102
    mww 0xbf801090 0x70a
    mww 0xbf8010a0 0x203
    mww 0xbf8010b0 0xc02
    mww 0xbf8010c0 0x1c8
    mww 0xbf8010d0 0x1
    mww 0xbf8010e0 0x0
    mww 0xbf8010f0 0x13c
    mww 0xbf801100 0xC800
    mww 0xbf801110 0xd
    mww 0xbf801120 0x300
    mww 0xbf801130 0x200
    mww 0xbf801140 0xa04
    mww 0xbf801150 0xd00
    mww 0xbf801160 0xd0d
    mww 0xbf801170 0x0
    mww 0xbf801180 0x062
    mww 0xbf801190 0x0
    mww 0xbf8011a0 0x0
    mww 0xbf8011b0 0x0
    mww 0xbf8011c0 0x510
    mww 0xbf8011d0 0x2d89
    mww 0xbf8011e0 0x8300
    mww 0xbf8011f0 0x0
    mww 0xbf801200 0x0
    mww 0xbf801210 0x0
    mww 0xbf801220 0x0
    mww 0xbf801230 0x0
    mww 0xbf801240 0x0
    mww 0xbf801250 0x0
    mww 0xbf801260 0x0
    mww 0xbf801270 0x0
    mww 0xbf801280 0x0
    mww 0xbf801290 0x0
    mww 0xbf8012a0 0x0
    mww 0xbf8012b0 0x0
    mww 0xbf8012c0 0x0
    mww 0xbf8012d0 0x500
    mww 0xbf8012e0 0x0
}

proc danube_mc_init_finish {} {
    echo "Danube: MC init finish"

    # start MC
    mww 0xbf800060 0x05
    mww 0xbf801030 0x100

    # wait for DLL lock
    sleep 50
}

proc danube_ebu_init {} {
    echo "Danube: EBU init"

    mww 0xbe105360 0x0001f7ff
    mww 0xbe105320 0x10000011
}

proc danube_ebu_swap_enable {} {
    echo "Danube: EBU swap enable"

    mww 0xbe105360 0x4001f7ff
}

proc danube_ebu_swap_disable {} {
    echo "Danube: EBU swap disable"

    mww 0xbe105360 0x0001f7ff
}

proc danube_flash_probe {} {
    danube_ebu_swap_enable
    sleep 10
    flash probe 0
    danube_ebu_swap_disable
}

proc danube_gdb_attach {} {
    echo "Danube: gdb-attach"

    reset halt
    danube_ebu_init
    danube_flash_probe
}

$TARGETNAME configure -event gdb-attach { danube_gdb_attach }
